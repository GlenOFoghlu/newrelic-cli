// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cli-plugin.proto

package protoDef

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DiscoverRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscoverRequest) Reset()         { *m = DiscoverRequest{} }
func (m *DiscoverRequest) String() string { return proto.CompactTextString(m) }
func (*DiscoverRequest) ProtoMessage()    {}
func (*DiscoverRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed6a08518e5450a1, []int{0}
}

func (m *DiscoverRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoverRequest.Unmarshal(m, b)
}
func (m *DiscoverRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoverRequest.Marshal(b, m, deterministic)
}
func (m *DiscoverRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoverRequest.Merge(m, src)
}
func (m *DiscoverRequest) XXX_Size() int {
	return xxx_messageInfo_DiscoverRequest.Size(m)
}
func (m *DiscoverRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoverRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoverRequest proto.InternalMessageInfo

type DiscoverResponse struct {
	Commands             []*CommandDefinition `protobuf:"bytes,1,rep,name=Commands,proto3" json:"Commands,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DiscoverResponse) Reset()         { *m = DiscoverResponse{} }
func (m *DiscoverResponse) String() string { return proto.CompactTextString(m) }
func (*DiscoverResponse) ProtoMessage()    {}
func (*DiscoverResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed6a08518e5450a1, []int{1}
}

func (m *DiscoverResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoverResponse.Unmarshal(m, b)
}
func (m *DiscoverResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoverResponse.Marshal(b, m, deterministic)
}
func (m *DiscoverResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoverResponse.Merge(m, src)
}
func (m *DiscoverResponse) XXX_Size() int {
	return xxx_messageInfo_DiscoverResponse.Size(m)
}
func (m *DiscoverResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoverResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoverResponse proto.InternalMessageInfo

func (m *DiscoverResponse) GetCommands() []*CommandDefinition {
	if m != nil {
		return m.Commands
	}
	return nil
}

type CommandFlag struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Required             bool     `protobuf:"varint,2,opt,name=Required,proto3" json:"Required,omitempty"`
	Shorthand            string   `protobuf:"bytes,3,opt,name=Shorthand,proto3" json:"Shorthand,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
	Usage                string   `protobuf:"bytes,5,opt,name=Usage,proto3" json:"Usage,omitempty"`
	Options              []string `protobuf:"bytes,6,rep,name=Options,proto3" json:"Options,omitempty"`
	Prompt               string   `protobuf:"bytes,7,opt,name=Prompt,proto3" json:"Prompt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandFlag) Reset()         { *m = CommandFlag{} }
func (m *CommandFlag) String() string { return proto.CompactTextString(m) }
func (*CommandFlag) ProtoMessage()    {}
func (*CommandFlag) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed6a08518e5450a1, []int{2}
}

func (m *CommandFlag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandFlag.Unmarshal(m, b)
}
func (m *CommandFlag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandFlag.Marshal(b, m, deterministic)
}
func (m *CommandFlag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandFlag.Merge(m, src)
}
func (m *CommandFlag) XXX_Size() int {
	return xxx_messageInfo_CommandFlag.Size(m)
}
func (m *CommandFlag) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandFlag.DiscardUnknown(m)
}

var xxx_messageInfo_CommandFlag proto.InternalMessageInfo

func (m *CommandFlag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CommandFlag) GetRequired() bool {
	if m != nil {
		return m.Required
	}
	return false
}

func (m *CommandFlag) GetShorthand() string {
	if m != nil {
		return m.Shorthand
	}
	return ""
}

func (m *CommandFlag) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CommandFlag) GetUsage() string {
	if m != nil {
		return m.Usage
	}
	return ""
}

func (m *CommandFlag) GetOptions() []string {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *CommandFlag) GetPrompt() string {
	if m != nil {
		return m.Prompt
	}
	return ""
}

type CommandDefinition struct {
	Use                  string         `protobuf:"bytes,1,opt,name=Use,proto3" json:"Use,omitempty"`
	Short                string         `protobuf:"bytes,2,opt,name=Short,proto3" json:"Short,omitempty"`
	Long                 string         `protobuf:"bytes,3,opt,name=Long,proto3" json:"Long,omitempty"`
	Flags                []*CommandFlag `protobuf:"bytes,4,rep,name=Flags,proto3" json:"Flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CommandDefinition) Reset()         { *m = CommandDefinition{} }
func (m *CommandDefinition) String() string { return proto.CompactTextString(m) }
func (*CommandDefinition) ProtoMessage()    {}
func (*CommandDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed6a08518e5450a1, []int{3}
}

func (m *CommandDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandDefinition.Unmarshal(m, b)
}
func (m *CommandDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandDefinition.Marshal(b, m, deterministic)
}
func (m *CommandDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandDefinition.Merge(m, src)
}
func (m *CommandDefinition) XXX_Size() int {
	return xxx_messageInfo_CommandDefinition.Size(m)
}
func (m *CommandDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_CommandDefinition proto.InternalMessageInfo

func (m *CommandDefinition) GetUse() string {
	if m != nil {
		return m.Use
	}
	return ""
}

func (m *CommandDefinition) GetShort() string {
	if m != nil {
		return m.Short
	}
	return ""
}

func (m *CommandDefinition) GetLong() string {
	if m != nil {
		return m.Long
	}
	return ""
}

func (m *CommandDefinition) GetFlags() []*CommandFlag {
	if m != nil {
		return m.Flags
	}
	return nil
}

type ExecRequest struct {
	Command              string   `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	Args                 []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecRequest) Reset()         { *m = ExecRequest{} }
func (m *ExecRequest) String() string { return proto.CompactTextString(m) }
func (*ExecRequest) ProtoMessage()    {}
func (*ExecRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed6a08518e5450a1, []int{4}
}

func (m *ExecRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecRequest.Unmarshal(m, b)
}
func (m *ExecRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecRequest.Marshal(b, m, deterministic)
}
func (m *ExecRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecRequest.Merge(m, src)
}
func (m *ExecRequest) XXX_Size() int {
	return xxx_messageInfo_ExecRequest.Size(m)
}
func (m *ExecRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecRequest proto.InternalMessageInfo

func (m *ExecRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *ExecRequest) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type ExecResponse struct {
	Stdout               []byte   `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr               []byte   `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecResponse) Reset()         { *m = ExecResponse{} }
func (m *ExecResponse) String() string { return proto.CompactTextString(m) }
func (*ExecResponse) ProtoMessage()    {}
func (*ExecResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed6a08518e5450a1, []int{5}
}

func (m *ExecResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecResponse.Unmarshal(m, b)
}
func (m *ExecResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecResponse.Marshal(b, m, deterministic)
}
func (m *ExecResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecResponse.Merge(m, src)
}
func (m *ExecResponse) XXX_Size() int {
	return xxx_messageInfo_ExecResponse.Size(m)
}
func (m *ExecResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecResponse proto.InternalMessageInfo

func (m *ExecResponse) GetStdout() []byte {
	if m != nil {
		return m.Stdout
	}
	return nil
}

func (m *ExecResponse) GetStderr() []byte {
	if m != nil {
		return m.Stderr
	}
	return nil
}

func init() {
	proto.RegisterType((*DiscoverRequest)(nil), "protoDef.DiscoverRequest")
	proto.RegisterType((*DiscoverResponse)(nil), "protoDef.DiscoverResponse")
	proto.RegisterType((*CommandFlag)(nil), "protoDef.CommandFlag")
	proto.RegisterType((*CommandDefinition)(nil), "protoDef.CommandDefinition")
	proto.RegisterType((*ExecRequest)(nil), "protoDef.ExecRequest")
	proto.RegisterType((*ExecResponse)(nil), "protoDef.ExecResponse")
}

func init() { proto.RegisterFile("cli-plugin.proto", fileDescriptor_ed6a08518e5450a1) }

var fileDescriptor_ed6a08518e5450a1 = []byte{
	// 395 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0xcd, 0x6a, 0xdb, 0x40,
	0x10, 0x46, 0x96, 0x2c, 0x4b, 0x63, 0x43, 0xed, 0xa5, 0x35, 0x5b, 0xb5, 0x07, 0xa1, 0x93, 0xa0,
	0xd4, 0x14, 0xf7, 0xd0, 0x43, 0xa1, 0x50, 0xec, 0x04, 0x42, 0x4c, 0x12, 0x36, 0xf1, 0x03, 0x28,
	0xd2, 0x5a, 0x16, 0x58, 0x5a, 0x65, 0x57, 0x0e, 0x09, 0xe4, 0x92, 0xa7, 0xca, 0xeb, 0x85, 0xfd,
	0x91, 0x6d, 0xec, 0x9c, 0x76, 0xbe, 0x6f, 0xfe, 0xbe, 0x99, 0x1d, 0x18, 0xa6, 0x9b, 0xe2, 0x67,
	0xbd, 0xd9, 0xe6, 0x45, 0x35, 0xa9, 0x39, 0x6b, 0x18, 0xf2, 0xd4, 0x33, 0xa7, 0xab, 0x68, 0x04,
	0x9f, 0xe6, 0x85, 0x48, 0xd9, 0x23, 0xe5, 0x84, 0x3e, 0x6c, 0xa9, 0x68, 0xa2, 0x4b, 0x18, 0xee,
	0x29, 0x51, 0xb3, 0x4a, 0x50, 0xf4, 0x07, 0xbc, 0x19, 0x2b, 0xcb, 0xa4, 0xca, 0x04, 0xb6, 0x42,
	0x3b, 0xee, 0x4f, 0xbf, 0x4d, 0xda, 0x1a, 0x13, 0xe3, 0x99, 0xd3, 0x55, 0x51, 0x15, 0x4d, 0xc1,
	0x2a, 0xb2, 0x0b, 0x8e, 0xde, 0x2c, 0xe8, 0x1b, 0x70, 0xbe, 0x49, 0x72, 0x84, 0xc0, 0xb9, 0x4a,
	0x4a, 0x8a, 0xad, 0xd0, 0x8a, 0x7d, 0xa2, 0x6c, 0x14, 0x80, 0x27, 0x7b, 0x17, 0x9c, 0x66, 0xb8,
	0x13, 0x5a, 0xb1, 0x47, 0x76, 0x18, 0x7d, 0x07, 0xff, 0x76, 0xcd, 0x78, 0xb3, 0x4e, 0xaa, 0x0c,
	0xdb, 0x2a, 0x69, 0x4f, 0xc8, 0x6a, 0x77, 0xcf, 0x35, 0xc5, 0x8e, 0xae, 0x26, 0x6d, 0xf4, 0x19,
	0xba, 0x4b, 0x91, 0xe4, 0x14, 0x77, 0x15, 0xa9, 0x01, 0xc2, 0xd0, 0xbb, 0xae, 0xa5, 0x36, 0x81,
	0xdd, 0xd0, 0x8e, 0x7d, 0xd2, 0x42, 0x34, 0x06, 0xf7, 0x86, 0xb3, 0xb2, 0x6e, 0x70, 0x4f, 0x25,
	0x18, 0x14, 0xbd, 0xc0, 0xe8, 0x64, 0x30, 0x34, 0x04, 0x7b, 0x29, 0x5a, 0xf5, 0xd2, 0x94, 0xed,
	0x94, 0x1e, 0xa5, 0xdc, 0x27, 0x1a, 0x48, 0x61, 0x0b, 0x56, 0xe5, 0x46, 0xb1, 0xb2, 0xd1, 0x0f,
	0xe8, 0xca, 0x15, 0x08, 0xec, 0xa8, 0x05, 0x7e, 0x39, 0x59, 0xa0, 0xf4, 0x12, 0x1d, 0x13, 0xfd,
	0x85, 0xfe, 0xd9, 0x13, 0x4d, 0xcd, 0x9f, 0x48, 0xf9, 0xa9, 0x0e, 0x32, 0xbd, 0x5b, 0x28, 0x3b,
	0x25, 0x3c, 0x17, 0xb8, 0xa3, 0xa6, 0x52, 0x76, 0xf4, 0x0f, 0x06, 0x3a, 0xd9, 0xfc, 0xde, 0x18,
	0x5c, 0xd1, 0x64, 0x6c, 0xdb, 0xa8, 0xe4, 0x01, 0x31, 0xc8, 0xf0, 0x94, 0x73, 0x25, 0x5e, 0xf3,
	0x94, 0xf3, 0xe9, 0xab, 0x05, 0xf6, 0x6c, 0x71, 0x81, 0xfe, 0x83, 0xd7, 0x5e, 0x02, 0xfa, 0xba,
	0x97, 0x7b, 0x74, 0x30, 0x41, 0xf0, 0x91, 0x6b, 0x77, 0x38, 0x8e, 0x94, 0x82, 0x0e, 0xa6, 0x3d,
	0x98, 0x2b, 0x18, 0x1f, 0xd3, 0x3a, 0xed, 0x97, 0x75, 0xef, 0x2a, 0xc7, 0xef, 0xf7, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xcd, 0x7b, 0x4e, 0xe6, 0xbd, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CLIClient is the client API for CLI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CLIClient interface {
	Discover(ctx context.Context, in *DiscoverRequest, opts ...grpc.CallOption) (*DiscoverResponse, error)
	Exec(ctx context.Context, in *ExecRequest, opts ...grpc.CallOption) (CLI_ExecClient, error)
}

type cLIClient struct {
	cc *grpc.ClientConn
}

func NewCLIClient(cc *grpc.ClientConn) CLIClient {
	return &cLIClient{cc}
}

func (c *cLIClient) Discover(ctx context.Context, in *DiscoverRequest, opts ...grpc.CallOption) (*DiscoverResponse, error) {
	out := new(DiscoverResponse)
	err := c.cc.Invoke(ctx, "/protoDef.CLI/Discover", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cLIClient) Exec(ctx context.Context, in *ExecRequest, opts ...grpc.CallOption) (CLI_ExecClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CLI_serviceDesc.Streams[0], "/protoDef.CLI/Exec", opts...)
	if err != nil {
		return nil, err
	}
	x := &cLIExecClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CLI_ExecClient interface {
	Recv() (*ExecResponse, error)
	grpc.ClientStream
}

type cLIExecClient struct {
	grpc.ClientStream
}

func (x *cLIExecClient) Recv() (*ExecResponse, error) {
	m := new(ExecResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CLIServer is the server API for CLI service.
type CLIServer interface {
	Discover(context.Context, *DiscoverRequest) (*DiscoverResponse, error)
	Exec(*ExecRequest, CLI_ExecServer) error
}

// UnimplementedCLIServer can be embedded to have forward compatible implementations.
type UnimplementedCLIServer struct {
}

func (*UnimplementedCLIServer) Discover(ctx context.Context, req *DiscoverRequest) (*DiscoverResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Discover not implemented")
}
func (*UnimplementedCLIServer) Exec(req *ExecRequest, srv CLI_ExecServer) error {
	return status.Errorf(codes.Unimplemented, "method Exec not implemented")
}

func RegisterCLIServer(s *grpc.Server, srv CLIServer) {
	s.RegisterService(&_CLI_serviceDesc, srv)
}

func _CLI_Discover_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscoverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CLIServer).Discover(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protoDef.CLI/Discover",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CLIServer).Discover(ctx, req.(*DiscoverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CLI_Exec_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ExecRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CLIServer).Exec(m, &cLIExecServer{stream})
}

type CLI_ExecServer interface {
	Send(*ExecResponse) error
	grpc.ServerStream
}

type cLIExecServer struct {
	grpc.ServerStream
}

func (x *cLIExecServer) Send(m *ExecResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _CLI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protoDef.CLI",
	HandlerType: (*CLIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Discover",
			Handler:    _CLI_Discover_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Exec",
			Handler:       _CLI_Exec_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "cli-plugin.proto",
}
