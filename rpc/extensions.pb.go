// Code generated by protoc-gen-go. DO NOT EDIT.
// source: extensions.proto

package rpc

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommandExecution struct {
	Command              string   `protobuf:"bytes,1,opt,name=Command,proto3" json:"Command,omitempty"`
	Args                 []string `protobuf:"bytes,2,rep,name=Args,proto3" json:"Args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandExecution) Reset()         { *m = CommandExecution{} }
func (m *CommandExecution) String() string { return proto.CompactTextString(m) }
func (*CommandExecution) ProtoMessage()    {}
func (*CommandExecution) Descriptor() ([]byte, []int) {
	return fileDescriptor_80048569110312b4, []int{0}
}

func (m *CommandExecution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandExecution.Unmarshal(m, b)
}
func (m *CommandExecution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandExecution.Marshal(b, m, deterministic)
}
func (m *CommandExecution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandExecution.Merge(m, src)
}
func (m *CommandExecution) XXX_Size() int {
	return xxx_messageInfo_CommandExecution.Size(m)
}
func (m *CommandExecution) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandExecution.DiscardUnknown(m)
}

var xxx_messageInfo_CommandExecution proto.InternalMessageInfo

func (m *CommandExecution) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *CommandExecution) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type ExecutionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecutionRequest) Reset()         { *m = ExecutionRequest{} }
func (m *ExecutionRequest) String() string { return proto.CompactTextString(m) }
func (*ExecutionRequest) ProtoMessage()    {}
func (*ExecutionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_80048569110312b4, []int{1}
}

func (m *ExecutionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionRequest.Unmarshal(m, b)
}
func (m *ExecutionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionRequest.Marshal(b, m, deterministic)
}
func (m *ExecutionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionRequest.Merge(m, src)
}
func (m *ExecutionRequest) XXX_Size() int {
	return xxx_messageInfo_ExecutionRequest.Size(m)
}
func (m *ExecutionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionRequest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CommandExecution)(nil), "CommandExecution")
	proto.RegisterType((*ExecutionRequest)(nil), "ExecutionRequest")
}

func init() { proto.RegisterFile("extensions.proto", fileDescriptor_80048569110312b4) }

var fileDescriptor_80048569110312b4 = []byte{
	// 145 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x48, 0xad, 0x28, 0x49,
	0xcd, 0x2b, 0xce, 0xcc, 0xcf, 0x2b, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x72, 0xe0, 0x12,
	0x70, 0xce, 0xcf, 0xcd, 0x4d, 0xcc, 0x4b, 0x71, 0xad, 0x48, 0x4d, 0x2e, 0x2d, 0xc9, 0xcc, 0xcf,
	0x13, 0x92, 0xe0, 0x62, 0x87, 0x8a, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0xc1, 0xb8, 0x42,
	0x42, 0x5c, 0x2c, 0x8e, 0x45, 0xe9, 0xc5, 0x12, 0x4c, 0x0a, 0xcc, 0x1a, 0x9c, 0x41, 0x60, 0xb6,
	0x92, 0x10, 0x97, 0x00, 0x5c, 0x6b, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x91, 0x3d, 0x17,
	0xa7, 0x2b, 0xcc, 0x26, 0x21, 0x23, 0x2e, 0x2e, 0xb8, 0x82, 0x62, 0x21, 0x41, 0x3d, 0x74, 0xd5,
	0x52, 0x82, 0x7a, 0xe8, 0x4e, 0x70, 0x62, 0x8f, 0x62, 0xd5, 0xb3, 0x2e, 0x2a, 0x48, 0x4e, 0x62,
	0x03, 0x3b, 0xd3, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x22, 0xc4, 0x15, 0x00, 0xba, 0x00, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExtensionClient is the client API for Extension service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExtensionClient interface {
	Executions(ctx context.Context, in *ExecutionRequest, opts ...grpc.CallOption) (*CommandExecution, error)
}

type extensionClient struct {
	cc *grpc.ClientConn
}

func NewExtensionClient(cc *grpc.ClientConn) ExtensionClient {
	return &extensionClient{cc}
}

func (c *extensionClient) Executions(ctx context.Context, in *ExecutionRequest, opts ...grpc.CallOption) (*CommandExecution, error) {
	out := new(CommandExecution)
	err := c.cc.Invoke(ctx, "/Extension/Executions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExtensionServer is the server API for Extension service.
type ExtensionServer interface {
	Executions(context.Context, *ExecutionRequest) (*CommandExecution, error)
}

// UnimplementedExtensionServer can be embedded to have forward compatible implementations.
type UnimplementedExtensionServer struct {
}

func (*UnimplementedExtensionServer) Executions(ctx context.Context, req *ExecutionRequest) (*CommandExecution, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Executions not implemented")
}

func RegisterExtensionServer(s *grpc.Server, srv ExtensionServer) {
	s.RegisterService(&_Extension_serviceDesc, srv)
}

func _Extension_Executions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecutionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtensionServer).Executions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Extension/Executions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtensionServer).Executions(ctx, req.(*ExecutionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Extension_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Extension",
	HandlerType: (*ExtensionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Executions",
			Handler:    _Extension_Executions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "extensions.proto",
}
